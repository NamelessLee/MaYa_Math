{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\暂时无用脚本/assets\\Script\\暂时无用脚本\\result detail-input.js"],"names":["cc","Class","extends","Component","properties","OPT_HEIGHT","PAGE_NUM","item_prefab","type","Prefab","default","scroll_view","ScrollView","onLoad","value_set","value2_set","value3_set","total","JSON","parse","sys","localStorage","getItem","allexercise","allinput","rw","i","push","content","x","opt_item_set","item","instantiate","addChild","node","on","on_scroll_ended","bind","start","start_y","y","start_index","load_record","label","getComponent","Label","string","scrollveiw_load_recode","elastic","length","_autoScrolling","down_loaded","out_len","up_loaded","update","dt"],"mappings":";;;;;;AAAA;;;;;;;;;;AAUAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,oBAAY,EAXJ,EAWQ;AAChBC,kBAAU,CAZF,EAYK;AACbC,qBAAa;AACTC,kBAAMR,GAAGS,MADA;AAETC,qBAAS;AAFA,SAbL;;AAkBRC,qBAAa;AACTH,kBAAMR,GAAGY,UADA;AAETF,qBAAS;AAFA;AAlBL,KAHP;;AA2BL;AACAG,YAAQ,kBAAY;AAChB,aAAKC,SAAL,GAAiB,EAAjB;AACN,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,KAAL,GAAaC,KAAKC,KAAL,CAAWnB,GAAGoB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAX,CAAb;AACA,aAAKC,WAAL,GAAmBL,KAAKC,KAAL,CAAWnB,GAAGoB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAAX,CAAnB;AACA,aAAKE,QAAL,GAAgBN,KAAKC,KAAL,CAAWnB,GAAGoB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,CAAhB;AACA,aAAKG,EAAL,GAAUP,KAAKC,KAAL,CAAWnB,GAAGoB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,IAA5B,CAAX,CAAV;AACM;AACA,aAAI,IAAII,IAAI,CAAZ,EAAeA,IAAI,KAAKT,KAAxB,EAA+BS,GAA/B,EAAqC;AAC1C,iBAAKZ,SAAL,CAAea,IAAf,CAAoB,KAAKH,QAAL,CAAcE,CAAd,CAApB,EAD0C,CACF;AACxC,iBAAKX,UAAL,CAAgBY,IAAhB,CAAqB,KAAKF,EAAL,CAAQC,CAAR,CAArB,EAF0C,CAEN;AAC9B;AACD,aAAKE,OAAL,GAAe,KAAKjB,WAAL,CAAiBiB,OAAhC;AACN,aAAKA,OAAL,CAAaC,CAAb,GAAiB,EAAjB;AACM,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAI,IAAIJ,IAAI,CAAZ,EAAeA,IAAI,KAAKT,KAAxB,EAA+BS,GAA/B,EAAqC;AACjC,gBAAIK,OAAO/B,GAAGgC,WAAH,CAAe,KAAKzB,WAApB,CAAX;AACA,iBAAKqB,OAAL,CAAaK,QAAb,CAAsBF,IAAtB;AACA,iBAAKD,YAAL,CAAkBH,IAAlB,CAAuBI,IAAvB;AACH;;AAED,aAAKpB,WAAL,CAAiBuB,IAAjB,CAAsBC,EAAtB,CAAyB,cAAzB,EAAyC,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAzC,EAA0E,IAA1E;AACH,KAnDI;;AAqDLC,WAAO,iBAAW;AACd,aAAKC,OAAL,GAAe,KAAKX,OAAL,CAAaY,CAA5B;AACA,aAAKC,WAAL,GAAmB,CAAnB,CAFc,CAEQ;AACtB,aAAKC,WAAL,CAAiB,KAAKD,WAAtB;AACH,KAzDI;;AA2DL;AACAC,iBAAa,qBAASD,WAAT,EAAsB;AAC/B,aAAKA,WAAL,GAAmBA,WAAnB;;AAEA,aAAI,IAAIf,IAAI,CAAZ,EAAeA,IAAI,KAAKT,KAAxB,EAA+BS,GAA/B,EAAqC;AACjC,gBAAIiB,QAAQ,KAAKb,YAAL,CAAkBJ,CAAlB,EAAqBkB,YAArB,CAAkC5C,GAAG6C,KAArC,CAAZ;AACA;AACAF,kBAAMG,MAAN,GAAe,KAAKhC,SAAL,CAAe2B,cAAcf,CAA7B,CAAf;AACH;AACJ,KApEI;;AAsELU,qBAAiB,2BAAW;AACxB,aAAKW,sBAAL;AACA,aAAKpC,WAAL,CAAiBqC,OAAjB,GAA2B,IAA3B;AACH,KAzEI;;AA2ELD,4BAAwB,kCAAW;AAC9B;AACD,YAAI,KAAKN,WAAL,GAAmB,KAAKnC,QAAL,GAAgB,CAAnC,GAAuC,KAAKQ,SAAL,CAAemC,MAAtD,IACA,KAAKrB,OAAL,CAAaY,CAAb,IAAkB,KAAKD,OAAL,GAAe,KAAKjC,QAAL,GAAgB,CAAhB,GAAoB,KAAKD,UAD9D,EAC0E;AAAE;;AAExE,gBAAI,KAAKM,WAAL,CAAiBuC,cAArB,EAAqC;AAAE;AACnC,qBAAKvC,WAAL,CAAiBqC,OAAjB,GAA2B,KAA3B,CADiC,CACC;AAClC;AACH;;AAED,gBAAIG,cAAc,KAAK7C,QAAvB;AACA,iBAAKmC,WAAL,IAAoBU,WAApB;AACA,gBAAI,KAAKV,WAAL,GAAmB,KAAKnC,QAAL,GAAgB,CAAnC,GAAuC,KAAKQ,SAAL,CAAemC,MAA1D,EAAkE;AAC9D,oBAAIG,UAAU,KAAKX,WAAL,GAAmB,KAAKnC,QAAL,GAAgB,CAAnC,GAAuC,KAAKQ,SAAL,CAAemC,MAApE;AACAE,+BAAgBC,OAAhB;AACA,qBAAKX,WAAL,IAAqBW,OAArB;AACH;AACD,iBAAKV,WAAL,CAAiB,KAAKD,WAAtB;;AAEA,iBAAKb,OAAL,CAAaY,CAAb,IAAmBW,cAAc,KAAK9C,UAAtC;AACA;AACH;;AAED;AACA,YAAI,KAAKoC,WAAL,GAAmB,CAAnB,IAAwB,KAAKb,OAAL,CAAaY,CAAb,IAAkB,KAAKD,OAAnD,EAA4D;AACxD,gBAAI,KAAK5B,WAAL,CAAiBuC,cAArB,EAAqC;AAAE;AACnC,qBAAKvC,WAAL,CAAiBqC,OAAjB,GAA2B,KAA3B;AACA;AACH;;AAED,gBAAIK,YAAY,KAAK/C,QAArB;AACA,iBAAKmC,WAAL,IAAoBY,SAApB;AACA,gBAAI,KAAKZ,WAAL,GAAmB,CAAvB,EAA0B;AACtBY,6BAAa,KAAKZ,WAAlB;AACA,qBAAKA,WAAL,GAAmB,CAAnB;AACH;AACD,iBAAKC,WAAL,CAAiB,KAAKD,WAAtB;AACA,iBAAKb,OAAL,CAAaY,CAAb,IAAmBa,YAAY,KAAKhD,UAApC;AACH;AACD;AACH,KAnHI;AAoHL;AACAiD,YAAQ,gBAAUC,EAAV,EAAc;AAClB,aAAKR,sBAAL;AACH;AAvHI,CAAT","file":"result detail-input.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\暂时无用脚本","sourcesContent":["/*\r\n假设世界排行榜要100个玩家的数据，我们怎么使用滚动列表来实现?\r\n显示[1, 100]这个数据\r\n(1)我们将我们滚动列表里面的每个项分成三个页\r\n(2)每一个页面我们制定一个数目，例如8个,根据你的scrollview的大小来决定;\r\n(3)总共使用的滚动列表里面的想 PAGE_NUM * 3 = 24个;\r\n(4) 有限的项要显示 超过它数目的数据记录?\r\n\r\n*/\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        OPT_HEIGHT: 80, // 每项的高度\r\n        PAGE_NUM: 8, // 每页为8个;\r\n        item_prefab: {\r\n            type: cc.Prefab,\r\n            default: null,\r\n        },\r\n\r\n        scroll_view: {\r\n            type: cc.ScrollView,\r\n            default: null,\r\n        },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.value_set = [];\r\n\t\tthis.value2_set = [];\r\n\t\tthis.value3_set = [];\r\n\t\tthis.total = JSON.parse(cc.sys.localStorage.getItem('total'));\r\n\t\tthis.allexercise = JSON.parse(cc.sys.localStorage.getItem('allexercise'));\r\n\t\tthis.allinput = JSON.parse(cc.sys.localStorage.getItem('allinput'));\r\n\t\tthis.rw = JSON.parse(cc.sys.localStorage.getItem('rw'));\r\n        // 如果你这里是排行榜，那么你就push排行榜的数据;\r\n        for(var i = 0; i < this.total; i ++) {\r\n\t\t\tthis.value_set.push(this.allinput[i]);\t\t//用户所有输入\r\n\t\t\tthis.value2_set.push(this.rw[i]);\t\t\t//用户做题情况\r\n        }\r\n        this.content = this.scroll_view.content;\r\n\t\tthis.content.x = 50;\r\n        this.opt_item_set = [];\r\n        for(var i = 0; i < this.total; i ++) {\r\n            var item = cc.instantiate(this.item_prefab);\r\n            this.content.addChild(item);\r\n            this.opt_item_set.push(item);\r\n        }\r\n\r\n        this.scroll_view.node.on(\"scroll-ended\", this.on_scroll_ended.bind(this), this);\r\n    },\r\n\r\n    start: function() {\r\n        this.start_y = this.content.y;\r\n        this.start_index = 0; // 当前我们24个Item加载的 100项数据里面的起始数据记录的索引;\r\n        this.load_record(this.start_index);\r\n    },\r\n\r\n    // 从这个索引开始，加载数据记录到我们的滚动列表里面的选项\r\n    load_record: function(start_index) {\r\n        this.start_index = start_index;\r\n\r\n        for(var i = 0; i < this.total; i ++) {\r\n            var label = this.opt_item_set[i].getComponent(cc.Label);\r\n            // 显示我们的记录;\r\n            label.string = this.value_set[start_index + i];\r\n        }\r\n    },\r\n\r\n    on_scroll_ended: function() {\r\n        this.scrollveiw_load_recode();\r\n        this.scroll_view.elastic = true;\r\n    },\r\n\r\n    scrollveiw_load_recode: function() {\r\n         // 向下加载了\r\n        if (this.start_index + this.PAGE_NUM * 3 < this.value_set.length &&\r\n            this.content.y >= this.start_y + this.PAGE_NUM * 2 * this.OPT_HEIGHT) { // 动态加载\r\n            \r\n            if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n                this.scroll_view.elastic = false; // 暂时关闭回弹效果\r\n                return;\r\n            }\r\n\r\n            var down_loaded = this.PAGE_NUM;\r\n            this.start_index += down_loaded;\r\n            if (this.start_index + this.PAGE_NUM * 3 > this.value_set.length) {\r\n                var out_len = this.start_index + this.PAGE_NUM * 3 - this.value_set.length;\r\n                down_loaded -= (out_len);\r\n                this.start_index -= (out_len);\r\n            }\r\n            this.load_record(this.start_index);\r\n\r\n            this.content.y -= (down_loaded * this.OPT_HEIGHT);\r\n            return;\r\n        }\r\n\r\n        // 向上加载\r\n        if (this.start_index > 0 && this.content.y <= this.start_y) {\r\n            if (this.scroll_view._autoScrolling) { // 等待这个自动滚动结束以后再做加载\r\n                this.scroll_view.elastic = false;\r\n                return;\r\n            }\r\n\r\n            var up_loaded = this.PAGE_NUM;\r\n            this.start_index -= up_loaded;\r\n            if (this.start_index < 0) {\r\n                up_loaded += this.start_index;\r\n                this.start_index = 0; \r\n            }\r\n            this.load_record(this.start_index);\r\n            this.content.y += (up_loaded * this.OPT_HEIGHT);\r\n        }\r\n        // end \r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        this.scrollveiw_load_recode();\r\n    },\r\n});"]}